---


resources: "config/resources.yaml"
samples: "config/samples.tsv"
samples_with_trio_sex: "config/SampleSheet.tsv"
units: "config/units.tsv"


default_container: "docker://hydragenetics/common:0.1.9"


modules:
  alignment: "v0.3.0"
  annotation: "v0.3.0"
  compression: "v1.1.0"
  cnv_sv: "32957b1"
  filtering: "6e95284"
  parabricks: "1410021"
  prealignment: "v0.5.0"
  qc: "v0.3.0"
  misc: "v0.2.0"
  mitochondrial: "v0.1.0"
  snv_indels: "72fd295"


reference:
  coverage_bed: "/beegfs-storage/data/ref_data/refseq/refseq_select_mane_20221123.bed"   #Created bed with https://github.com/zezzipa/UCSCtable2bed
  design_bed: "/beegfs-storage/data/ref_genomes/GRCh38/reference_grasnatter/homo_sapiens.wgs.bed"
  exome_bed: "/beegfs-storage/projects/wp3/Reference_files/Manifest/Clinical_research_exome/TWIST/Twist_Comprehensive_Exome_Covered_Targets_hg38.bed"
  exome_intervals: "/beegfs-storage/projects/wp3/Reference_files/Manifest/Clinical_research_exome/TWIST/Twist_Comprehensive_Exome_Covered_Targets_hg38_interval_list.bed"
  fasta: "/beegfs-storage/data/ref_genomes/GRCh38/reference_grasnatter/homo_sapiens.fasta"
  fai: "/beegfs-storage/data/ref_genomes/GRCh38/reference_grasnatter/homo_sapiens.fasta.fai"
  genepanels: "/beegfs-storage/projects/wp3/Reference_files/Manifest/Clinical_research_exome/Gene_panels/genepanels.list"
  genome_dir: "/beegfs-storage/data/ref_genomes/GRCh38/reference_grasnatter/homo_sapiens_star"
  sites: "/beegfs-storage/data/ref_genomes/GRCh38/reference_grasnatter/homo_sapiens.known_indels.vcf.gz"
  wgs_intervals: "/beegfs-storage/data/ref_genomes/GRCh38/reference_grasnatter/homo_sapiens.wgs.interval_list"


trimmer_software: "fastp_pe"


aligner: "bwa_cpu" # "bwa_cpu" or "bwa_gpu"
snp_caller: "deepvariant_cpu" # "deepvariant_cpu" or "deepvariant_gpu"


automap:
  container: "docker://hydragenetics/automap:1.2"
  build: "hg38"
  extra: "--DP 10 --minsize 3 --chrX"
  outdir: "cnv_sv/automap"


bcftools_view_biallelic:
  container: "docker://hydragenetics/common:0.2.0"
  extra: "-m2 -M2 -v snps"


bcftools_view_pass:
  container: "docker://hydragenetics/common:0.2.0"
  extra: "--apply-filter PASS "


bwa_mem:
  container: "docker://hydragenetics/bwa:0.7.15"
  amb: "/beegfs-storage/data/ref_genomes/GRCh38/reference_grasnatter/homo_sapiens.fasta.amb"
  ann: "/beegfs-storage/data/ref_genomes/GRCh38/reference_grasnatter/homo_sapiens.fasta.ann"
  bwt: "/beegfs-storage/data/ref_genomes/GRCh38/reference_grasnatter/homo_sapiens.fasta.bwt"
  pac: "/beegfs-storage/data/ref_genomes/GRCh38/reference_grasnatter/homo_sapiens.fasta.pac"
  sa: "/beegfs-storage/data/ref_genomes/GRCh38/reference_grasnatter/homo_sapiens.fasta.sa"


bwa_mem_mito:
  container: "docker://hydragenetics/bwa_mem:0.7.17"
  extra: "-K 100000000 -v3 -Y"
  amb:
    mt: "/data/ref_data/gatk_mito/Homo_sapiens_assembly38.chrM.fasta.amb"
    mt_shifted: "/data/ref_data/gatk_mito/Homo_sapiens_assembly38.chrM.shifted_by_8000_bases.fasta.amb"
  ann:
    mt: "/data/ref_data/gatk_mito/Homo_sapiens_assembly38.chrM.fasta.ann"
    mt_shifted: "/data/ref_data/gatk_mito/Homo_sapiens_assembly38.chrM.shifted_by_8000_bases.fasta.ann"
  bwt:
    mt: "/data/ref_data/gatk_mito/Homo_sapiens_assembly38.chrM.fasta.bwt"
    mt_shifted: "/data/ref_data/gatk_mito/Homo_sapiens_assembly38.chrM.shifted_by_8000_bases.fasta.bwt"
  pac:
    mt: "/data/ref_data/gatk_mito/Homo_sapiens_assembly38.chrM.fasta.pac"
    mt_shifted: "/data/ref_data/gatk_mito/Homo_sapiens_assembly38.chrM.shifted_by_8000_bases.fasta.pac"
  sa:
    mt: "/data/ref_data/gatk_mito/Homo_sapiens_assembly38.chrM.fasta.sa"
    mt_shifted: "/data/ref_data/gatk_mito/Homo_sapiens_assembly38.chrM.shifted_by_8000_bases.fasta.sa"


cnvpytor_readdepth:
  container: "docker://hydragenetics/cnvpytor:1.2.1"
  length_list: "1000 10000 100000"


cnvpytor_filter:
  container: "docker://hydragenetics/cnvpytor:1.2.1"
  dG_range: "100000 inf"
  p_range: "0 0.01"
  pN_range: "0 0.5"
  Q0_range: "0 0.05"
  view: "1000"


create_cov_excel:
  container: "/projects/wp2/nobackup/Twist_Myeloid/Containers/python3.6-pysam-xlsxwriter-yaml.simg"
  covLimits: "10 20 30"


crumble:
  container: "docker://hydragenetics/crumble:0.8.3"
  extra: "-O CRAM"


deepvariant_call_variants:
  container: "docker://hydragenetics/deepvariant:1.4.0"
  model_dir: "/opt/models/wgs"


deepvariant_make_examples:
  container: "docker://hydragenetics/deepvariant:1.4.0"
  model: "WGS"


deepvariant_make_examples_peddy:
  container: "docker://hydragenetics/deepvariant:1.4.0"
  model: "WGS"
  extra: "--regions /beegfs-storage/data/ref_data/peddy/v0.4.8/GRCH38.bed "


deepvariant_postprocess_variants:
  container: "docker://hydragenetics/deepvariant:1.4.0"
  vcf_type: "vcf"


deepvariant_postprocess_variants_peddy:
  container: "docker://hydragenetics/deepvariant:1.4.0"
  vcf_type: "gvcf"


expansionhunter:
  container: "docker://hydragenetics/expansionhunter:5.0.0"
  variant_catalog: "/data/ref_data/expansionhunter/v5.0.0/grch38/variant_catalog.json"


fastp_pe:
  container: "docker://hydragenetics/fastp:0.20.1"
  # Default enabled trimming parameters for fastp. Specified for clarity.
  extra: "--trim_poly_g --qualified_quality_phred 15 --unqualified_percent_limit 40 --n_base_limit 5 --length_required 15"

fastqc:
  container: "docker://hydragenetics/fastqc:0.11.9"


filter_vcf:
  germline: "config/config_hard_filter_germline.yaml"


gatk_collect_wgs_metrics:
  container: "docker://hydragenetics/gatk4:4.2.2.0"
  coverage_cap: 100000
  read_length: 151


gatk_filter_contamination:
  container: "docker://hydragenetics/gatk4:4.2.2.0"


gatk_filter_mutect_calls_mt:
  container: "docker://hydragenetics/gatk4:4.2.2.0"


gatk_left_align_and_trim_variants:
  container: "docker://hydragenetics/gatk4:4.2.2.0"


gatk_lift_over_vcf:
  container: "docker://hydragenetics/gatk4:4.2.2.0"
  shift_back_chain: "/data/ref_data/gatk_mito/ShiftBack.chain"


gatk_mark_duplicates:
  container: "docker://hydragenetics/gatk4:4.2.2.0"


gatk_merge_bam_alignment:
  container: "docker://hydragenetics/gatk4:4.2.2.0"


gatk_merge_vcfs:
  container: "docker://hydragenetics/gatk4:4.2.2.0"


gatk_merge_stats:
  container: "docker://hydragenetics/gatk4:4.2.2.0"


gatk_mutect2:
  container: "docker://hydragenetics/gatk4:4.2.2.0"
  interval:
    mt: "/data/ref_data/gatk_mito/non_control_region.chrM.interval_list"
    mt_shifted: "/data/ref_data/gatk_mito/control_region_shifted.chrM.interval_list"
  max_reads_per_alignment_start: 75


gatk_print_reads:
  container: "docker://hydragenetics/gatk4:4.2.2.0"
  interval: "chrM"


gatk_revert_sam:
  container: "docker://hydragenetics/gatk4:4.2.2.0"


gatk_sam_to_fastq:
  container: "docker://hydragenetics/gatk4:4.2.2.0"


gatk_select_variants:
  container: "docker://hydragenetics/gatk4:4.2.2.0"


gatk_sort_sam:
  container: "docker://hydragenetics/gatk4:4.2.2.0"


gatk_split_multi_allelic_sites:
  container: "docker://hydragenetics/gatk4:4.2.2.0"


gatk_variant_filtration:
  container: "docker://hydragenetics/gatk4:4.2.2.0"


glnexus:
  bedfile: "/data/ref_data/peddy/v0.4.8/GRCH38.bed"
  container: "docker://ghcr.io/dnanexus-rnd/glnexus:v1.4.3"


haplocheck:
  container: "docker://hydragenetics/haplocheck:1.3.3"


manta_config_n:
  container: "docker://hydragenetics/manta:1.6.0"
  extra: ""


manta_run_workflow_n:
  container: "docker://hydragenetics/manta:1.6.0"


mosdepth:
  container: "docker://hydragenetics/mosdepth:0.3.2"
  by: "500"
  extra: "--fast-mode --no-per-base "


mosdepth_bed:
  container: "docker://hydragenetics/mosdepth:0.3.2"
  extra: ""


multiqc:
  container: "docker://hydragenetics/multiqc:1.11"
  reports:
    DNA:
      config: "config/multiqc_config_DNA.yaml"
      included_unit_types: ["N"]
      qc_files:
        - "qc/fastqc/{sample}_{type}_{flowcell}_{lane}_{barcode}_fastq1_fastqc.zip"
        - "qc/fastqc/{sample}_{type}_{flowcell}_{lane}_{barcode}_fastq2_fastqc.zip"
        - "qc/mosdepth/{sample}_{type}.mosdepth.summary.txt"
        - "qc/mosdepth/{sample}_{type}.mosdepth.region.dist.txt"
        - "qc/mosdepth/{sample}_{type}.mosdepth.global.dist.txt"
        - "qc/peddy/peddy_sex_check_mqc.tsv"
        - "qc/peddy/peddy_rel_check_mqc.tsv"
        - "qc/picard_collect_alignment_summary_metrics/{sample}_{type}.alignment_summary_metrics.txt"
        - "qc/picard_collect_duplication_metrics/{sample}_{type}.duplication_metrics.txt"
        - "qc/picard_collect_gc_bias_metrics/{sample}_{type}.gc_bias.summary_metrics"
        - "qc/picard_collect_hs_metrics/{sample}_{type}.HsMetrics.txt"
        - "qc/picard_collect_insert_size_metrics/{sample}_{type}.insert_size_metrics.txt"
        - "qc/picard_collect_wgs_metrics/{sample}_{type}.txt"
        - "qc/samtools_stats/{sample}_{type}.samtools-stats.txt"
        - "qc/samtools_idxstats/{sample}_{type}.samtools-idxstats.txt"


mt_reference:
  mt: "/data/ref_data/gatk_mito/Homo_sapiens_assembly38.chrM.fasta"
  mt_shifted: "/data/ref_data/gatk_mito/Homo_sapiens_assembly38.chrM.shifted_by_8000_bases.fasta"
  blacklist: /data/ref_data/gatk_mito/blacklist_sites.hg38.chrM.bed


pbrun_deepvariant:
  container: "docker://nvcr.io/nvidia/clara/clara-parabricks:4.0.0-1"
  deepvariant_model: "/beegfs-storage/data/parabricks/4.0.0-1/A30/wgs/deepvariant.eng"
  extra: "--disable-use-window-selector-model " ## For consistency with deepvariant cpu. Also increases accuracy.


pbrun_fq2bam:
  container: "docker://nvcr.io/nvidia/clara/clara-parabricks:4.0.0-1"
  extra: ""


peddy:
  container: "docker://hydragenetics/peddy:0.4.8"
  samples: "config/SampleSheet.csv"
  config: "config/peddy_mqc.yaml"
  extra: "--sites hg38 "


picard_collect_alignment_summary_metrics:
  container: "docker://hydragenetics/picard:2.25.0"


picard_collect_duplication_metrics:
  container: "docker://hydragenetics/picard:2.25.0"


picard_collect_gc_bias_metrics:
  container: "docker://hydragenetics/picard:2.25.0"


picard_collect_hs_metrics:
  container: "docker://hydragenetics/picard:2.25.0"


picard_collect_insert_size_metrics:
  container: "docker://hydragenetics/picard:2.25.0"


picard_collect_multiple_metrics:
  container: "docker://hydragenetics/picard:2.25.0"
 # output_ext:
 # - "alignment_summary_metrics"
 # - "base_distribution_by_cycle_metrics"
 # - "base_distribution_by_cycle.pdf"
 # - "insert_size_metrics"
 # - "insert_size_histogram.pdf"
 # - "quality_by_cycle_metrics"
 # - "quality_by_cycle.pdf"
 # - "quality_distribution_metrics"
 # - "quality_distribution.pdf"


picard_collect_wgs_metrics:
  container: "docker://hydragenetics/picard:2.25.0"


picard_mark_duplicates:
  container: "docker://hydragenetics/picard:2.25.4"


reviewer:
  container: "docker://hydragenetics/reviewer:0.2.7"


sample_order_for_multiqc:
  sample_sheet: "config/SampleSheet.csv"


samtools_stats:
  container: "docker://hydragenetics/common:0.1.9"
  threads: 3
  params:
    extra: " --threads 3 "


samtools_idxstats:
  container: "docker://hydragenetics/common:0.1.9"
  threads: 3
  params:
    extra: " --threads 3 "


samtools:
  container: "docker://hydragenetics/common:0.1.9"


smn_caller:
  container: "docker://hydragenetics/smncopynumbercaller:1.1.2"
  genome_version: '38'


smn_charts:
  container: "docker://hydragenetics/smncopynumbercaller:1.1.2"


spring:
  container: "docker://hydragenetics/spring:1.0.1"


stranger:
  container: "docker://hydragenetics/stranger:0.8.1"
  catalog: "/data/ref_data/stranger/v0.8.1/variant_catalog_grch38.json"


svdb_merge:
  container: "docker://hydragenetics/svdb:2.6.0"
  cnv_callers:
    - "cnvnator"
    - "manta"
    - "tiddit"
  overlap: 0.6


svdb_query:
  container: "docker://hydragenetics/svdb:2.6.0"
  db_string:
    "--db /data/ref_genomes/GRCh38/SweGenSVDBGRCh38/swegen_cnvnator_tiddit_manta.vcf,/data/ref_genomes/GRCh38/gnomAD/gnomad_v2.1_sv.sites.vcf.gz \
    --in_frq FRQ,AF --in_occ OCC,AC --out_frq SweGen_AF,gnomAD_AF --out_occ SweGen_OCC,gnomAD_OCC "


tabix:
  container: "docker://hydragenetics/common:0.1.9"


tiddit:
  container: "docker://hydragenetics/tiddit:3.3.2"


vep:
  container: "docker://ensemblorg/ensembl-vep:release_109.3"
  vep_cache: "/beegfs-storage/data/ref_genomes/VEP/"
  extra: "--assembly GRCh38 --check_existing --pick --sift b --polyphen b --ccds --symbol --af --af_1kg --af_gnomad --max_af"
  threads: 4
