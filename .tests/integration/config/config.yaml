---


resources: "config/resources.yaml"
samples: "config/samples.tsv"
units: "config/units.tsv"

output: "config/output_list.json"

default_container: "docker://hydragenetics/common:1.11.1"

modules:
  alignment: "v0.6.0"
  annotation: "v0.3.0"
  compression: "v2.0.0"
  cnv_sv: "v0.5.0"
  filtering: "v0.3.0"
  parabricks: "v1.2.0"
  prealignment: "v1.2.0"
  qc: "v0.5.0"
  misc: "v0.2.0"
  mitochondrial: "v0.1.0"
  snv_indels: "v1.0.0"

reference:
  coverage_bed: "reference/refseq_select_mane_20221123.bed"   #Created bed with https://github.com/zezzipa/UCSCtable2bed
  design_bed: "reference/homo_sapiens.wgs.bed"
  exome_bed: "reference/Twist_Comprehensive_Exome_Covered_Targets_hg38.bed"
  exome_intervals: "reference/Twist_Comprehensive_Exome_Covered_Targets_hg38_interval_list.bed"
  fasta: "reference/homo_sapiens.fasta"
  fai: "reference/homo_sapiens.fasta.fai"
  genepanels: "reference/genepanels.list"
  str_panels_dir: "reference/str_panels"
  str_panels:
    - "ataxia.list"
    - "test.list"
  sites: "reference/homo_sapiens.known_indels.vcf.gz"
  wgs_intervals: "reference/homo_sapiens.wgs.interval_list"
  merge_contigs: # contigs to be merged to a single BAM for mark duplicates
    - ".*_random"
    - "chrUn_.*"
    - "chrEBV"

trimmer_software: "fastp_pe"

aligner: "bwa_gpu" # "bwa_cpu"
snp_caller: "deepvariant_gpu" # "deepvariant_cpu"

automap:
  container: "docker://hydragenetics/automap:1.2"
  build: "hg38"
  extra: "--DP 10 --minsize 3 --chrX"
  outdir: "cnv_sv/automap"

bcftools_split_vep:
  columns: "gnomad_AF:Float"

bcftools_view_biallelic:
  extra: "-m2 -M2 -v snps"

bcftools_filter_cnvpytor:
  exclude: "'pytorp1>0.0001 | pytorDG<100000 | pytorpN>0.5 | pytorQ0>0.5'"
  extra: "-s LowQual "

bcftools_view_pass:
  container: "docker://hydragenetics/common:1.11.1"
  extra: "--apply-filter PASS "

bcftools_view_svdb:
  extra: "-f 'PASS' -e 'tiddit_AF>0.05 | manta_AF>0.05 | cnvpytor_AF>0.05 | gnomad_AF>0.1'"

bwa_mem:
  container: "docker://hydragenetics/bwa:0.7.15"
  amb: "reference/homo_sapiens.fasta.amb"
  ann: "reference/homo_sapiens.fasta.ann"
  bwt: "reference/homo_sapiens.fasta.bwt"
  pac: "reference/homo_sapiens.fasta.pac"
  sa: "reference/homo_sapiens.fasta.sa"

bwa_mem_mito:
  container: "docker://hydragenetics/bwa_mem:0.7.17"
  extra: "-K 100000000 -v3 -Y"
  amb:
    mt: "reference/Homo_sapiens_assembly38.chrM.fasta.amb"
    mt_shifted: "reference/Homo_sapiens_assembly38.chrM.shifted_by_8000_bases.fasta.amb"
  ann:
    mt: "reference/Homo_sapiens_assembly38.chrM.fasta.ann"
    mt_shifted: "reference/Homo_sapiens_assembly38.chrM.shifted_by_8000_bases.fasta.ann"
  bwt:
    mt: "reference/Homo_sapiens_assembly38.chrM.fasta.bwt"
    mt_shifted: "reference/Homo_sapiens_assembly38.chrM.shifted_by_8000_bases.fasta.bwt"
  pac:
    mt: "reference/Homo_sapiens_assembly38.chrM.fasta.pac"
    mt_shifted: "reference/Homo_sapiens_assembly38.chrM.shifted_by_8000_bases.fasta.pac"
  sa:
    mt: "reference/Homo_sapiens_assembly38.chrM.fasta.sa"
    mt_shifted: "reference/Homo_sapiens_assembly38.chrM.shifted_by_8000_bases.fasta.sa"

cnvpytor_readdepth:
  container: "docker://hydragenetics/cnvpytor:1.2.1"
  length_list: "1000 10000 100000"
  extra: "-chrom chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19 chr20 chr21 chr22 chrX chrY chrM "

cnvpytor_filter:
  container: "docker://hydragenetics/cnvpytor:1.3.1"
  dG_range: "100000 inf"
  calling_model: "rd_mean_shift"
  p_range: "0 0.0001"
  pN_range: "0 0.5"
  Q0_range: "-1 0.5"
  view: "500"

create_cov_excel:
  container: "docker://hydragenetics/common:1.11.1"
  covLimits: "10 20 30"

deepvariant:
  container: "docker://google/deepvariant:1.5.0" 
  model_type: "WGS" 
  output_gvcf: true

expansionhunter:
  container: "docker://hydragenetics/expansionhunter:5.0.0"
  variant_catalog: "reference/variant_catalog.json"

fastp_pe:
  container: "docker://hydragenetics/fastp:0.20.1"
  # Default enabled trimming parameters for fastp. Specified for clarity.
  extra: "--trim_poly_g --qualified_quality_phred 15 --unqualified_percent_limit 40 --n_base_limit 5 --length_required 15"

fastqc:
  container: "docker://hydragenetics/fastqc:0.11.9"

filter_vcf:
  germline: "config/config_hard_filter_germline.yaml"

gatk_collect_wgs_metrics:
  container: "docker://hydragenetics/gatk4:4.2.2.0"
  coverage_cap: 100000
  read_length: 151

gatk_filter_contamination:
  container: "docker://hydragenetics/gatk4:4.2.2.0"

gatk_filter_mutect_calls_mt:
  container: "docker://hydragenetics/gatk4:4.2.2.0"

gatk_left_align_and_trim_variants:
  container: "docker://hydragenetics/gatk4:4.2.2.0"

gatk_lift_over_vcf:
  container: "docker://hydragenetics/gatk4:4.2.2.0"
  shift_back_chain: "reference/ShiftBack.chain"

gatk_mark_duplicates:
  container: "docker://hydragenetics/gatk4:4.2.2.0"

gatk_merge_bam_alignment:
  container: "docker://hydragenetics/gatk4:4.2.2.0"

gatk_merge_vcfs:
  container: "docker://hydragenetics/gatk4:4.2.2.0"

gatk_merge_stats:
  container: "docker://hydragenetics/gatk4:4.2.2.0"

gatk_mutect2:
  container: "docker://hydragenetics/gatk4:4.2.2.0"
  interval:
    mt: "reference/non_control_region.chrM.interval_list"
    mt_shifted: "reference/control_region_shifted.chrM.interval_list"
  max_reads_per_alignment_start: 75

gatk_print_reads:
  container: "docker://hydragenetics/gatk4:4.2.2.0"
  interval: "chrM"

gatk_revert_sam:
  container: "docker://hydragenetics/gatk4:4.2.2.0"

gatk_sam_to_fastq:
  container: "docker://hydragenetics/gatk4:4.2.2.0"

gatk_select_variants:
  container: "docker://hydragenetics/gatk4:4.2.2.0"

gatk_sort_sam:
  container: "docker://hydragenetics/gatk4:4.2.2.0"

gatk_split_multi_allelic_sites:
  container: "docker://hydragenetics/gatk4:4.2.2.0"

gatk_variant_filtration:
  container: "docker://hydragenetics/gatk4:4.2.2.0"

glnexus_trio:
  container: "docker://ghcr.io/dnanexus-rnd/glnexus:v1.4.1"
  configfile: "DeepVariantWGS"

glnexus_peddy:
  container: "docker://ghcr.io/dnanexus-rnd/glnexus:v1.4.1"
  configfile: "DeepVariantWGS"
  extra: "--bed reference/GRCH38.bed "

haplocheck:
  container: "docker://hydragenetics/haplocheck:1.3.3"

manta_config_n:
  container: "docker://hydragenetics/manta:1.6.0"
  extra: "--callRegions reference/GRCh38_chromosomes.bed.gz"

manta_run_workflow_n:
  container: "docker://hydragenetics/manta:1.6.0"

mosdepth:
  container: "docker://hydragenetics/mosdepth:0.3.2"
  by: "500"
  extra: "--fast-mode --no-per-base "

mosdepth_bed:
  container: "docker://hydragenetics/mosdepth:0.3.2"
  extra: ""

multiqc:
  container: "docker://hydragenetics/multiqc:1.11"
  reports:
    DNA:
      config: "config/multiqc_config_DNA.yaml"
      included_unit_types: ["N"]
      qc_files:
        - "qc/fastqc/{sample}_{type}_{flowcell}_{lane}_{barcode}_fastq1_fastqc.zip"
        - "qc/fastqc/{sample}_{type}_{flowcell}_{lane}_{barcode}_fastq2_fastqc.zip"
        - "qc/mosdepth/{sample}_{type}.mosdepth.summary.txt"
        - "qc/mosdepth/{sample}_{type}.mosdepth.region.dist.txt"
        - "qc/mosdepth/{sample}_{type}.mosdepth.global.dist.txt"
        - "qc/peddy/peddy.peddy.ped"
        - "qc/peddy/peddy.background_pca.json"
        - "qc/peddy/peddy.ped_check.csv"
        - "qc/peddy/peddy.sex_check.csv"
        - "qc/peddy/peddy.het_check.csv"
        - "qc/peddy/peddy_sex_check_mqc.tsv"
        - "qc/peddy/peddy_rel_check_mqc.tsv"
        - "qc/picard_collect_alignment_summary_metrics/{sample}_{type}.alignment_summary_metrics.txt"
        - "qc/picard_collect_duplication_metrics/{sample}_{type}.duplication_metrics.txt"
        - "qc/picard_collect_gc_bias_metrics/{sample}_{type}.gc_bias.summary_metrics"
        - "qc/picard_collect_hs_metrics/{sample}_{type}.HsMetrics.txt"
        - "qc/picard_collect_insert_size_metrics/{sample}_{type}.insert_size_metrics.txt"
        - "qc/picard_collect_wgs_metrics/{sample}_{type}.txt"
        - "qc/samtools_stats/{sample}_{type}.samtools-stats.txt"
        - "qc/samtools_idxstats/{sample}_{type}.samtools-idxstats.txt"
        - "qc/verifybamid2/{sample}_{type}.selfSM"

mt_reference:
  mt: "reference/Homo_sapiens_assembly38.chrM.fasta"
  mt_shifted: "reference/Homo_sapiens_assembly38.chrM.shifted_by_8000_bases.fasta"
  blacklist: reference/blacklist_sites.hg38.chrM.bed

pbrun_deepvariant:
  container: "docker://nvcr.io/nvidia/clara/clara-parabricks:4.2.1-1"
  extra: "--num-cpu-threads-per-stream 5 --num-streams-per-gpu 2 --disable-use-window-selector-model --gvcf " ## For consistency with deepvariant cpu. Also increases accuracy. 
  tmp_dir: "/tmp/"

pbrun_fq2bam:
  container: "docker://nvcr.io/nvidia/clara/clara-parabricks:4.2.1-1"
  extra: "--gpusort --gpuwrite --num-cpu-threads-per-stage 10 "
  tmp_dir: "/tmp/"

peddy:
  container: "docker://hydragenetics/peddy:0.4.8"
  config: "config/peddy_mqc.yaml"
  extra: "--sites hg38 "

picard_collect_alignment_summary_metrics:
  container: "docker://hydragenetics/picard:2.25.0"

picard_collect_duplication_metrics:
  container: "docker://hydragenetics/picard:2.25.0"

picard_collect_gc_bias_metrics:
  container: "docker://hydragenetics/picard:2.25.0"

picard_collect_hs_metrics:
  container: "docker://hydragenetics/picard:2.25.0"

picard_collect_insert_size_metrics:
  container: "docker://hydragenetics/picard:2.25.0"

picard_collect_wgs_metrics:
  container: "docker://hydragenetics/picard:2.25.0"

picard_mark_duplicates:
  container: "docker://hydragenetics/picard:2.25.4"

reviewer:
  container: "docker://hydragenetics/reviewer:0.2.7"

samtools_stats:
  container: "docker://hydragenetics/common:1.11.1"

samtools_idxstats:
  container: "docker://hydragenetics/common:1.11.1"

samtools:
  container: "docker://hydragenetics/common:1.11.1"

smn_caller:
  container: "docker://hydragenetics/smncopynumbercaller:1.1.2"
  genome_version: '38'

smn_charts:
  container: "docker://hydragenetics/smncopynumbercaller:1.1.2"

spring:
  container: "docker://hydragenetics/spring:1.0.1"

stranger:
  container: "docker://hydragenetics/stranger:0.8.1"
  catalog: "reference/variant_catalog_grch38.json"

svdb_merge:
  container: "docker://hydragenetics/svdb:2.8.2"
  overlap: 0.6
  priority: "tiddit,manta,cnvpytor"
  extra: "--pass_only "

svdb_query:
  container: "docker://hydragenetics/svdb:2.6.0"
  db_string:
    "--db reference/gnomad_v2.1_sv.sites.vcf.gz \
    --in_frq AF --in_occ AC --out_frq gnomAD_AF --out_occ gnomAD_OCC "

tabix:
  container: "docker://hydragenetics/common:0.1.9"

tiddit:
  container: "docker://hydragenetics/tiddit:3.3.2"

upd:
  container: "docker://hydragenetics/upd:0.1.1"
  extra: "--vep "

vep:
  container: "docker://ensemblorg/ensembl-vep:release_109.3"
  vep_cache: "reference/VEP/"
  extra: "--assembly GRCh38 --check_existing --pick --sift b --polyphen b --ccds --symbol --af --af_1kg --af_gnomad --max_af"

vep_trio:
  container: "docker://ensemblorg/ensembl-vep:release_109.3"
  vep_cache: "reference/VEP/"
  extra: "--assembly GRCh38 --check_existing --pick --max_af --buffer_size 50000"

vep_svdb:
  container: "docker://ensemblorg/ensembl-vep:release_110.1"
  vep_cache: "reference/VEP/"
  extra: "--assembly GRCh38 --check_existing --pick --custom file=/data/ref_data/gnomad/gnomad_sv/gnomad.v4.0.sv.vcf.gz,short_name=gnomad,fields=AF%CN_NONREF_FREQ%FILTER%ALGORITHMS%EVIDENCE%SVTYPE,format=vcf,reciprocal=1,overlap_cutoff=60,distance=1000,same_type=1"

verifybamid2:
  container: "docker://hydragenetics/verifybamid2:2.0.1"
  svd_mu: "reference/1000g.phase3.100k.b38.vcf.gz.dat.mu"

vt_decompose:
  container: "docker://hydragenetics/vt:2015.11.10"
